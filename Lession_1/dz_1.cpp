/*
1. На современных шоколадных фабриках используются нагреватели с
компьютерным управлением. Смесь молока и шоколада в нагревателе
доводится до кипения и передается на следующий этап изготовления. Ниже
приведен код класса, управляющего таким нагревателем. Сейчас попытка
создать новый объект данного класса будет успешной и это приведет к
неверному управлению бойлером. Оптимизируйте его так, чтобы любые другие
объекты обращаясь к этому нагревателю получали только один экземпляр, если
он существует.

2. Автоматы в наше время все чаще заменяют людей. Появились автоматы,
наливающие напитки, продающие сухарики, контактные линзы, автоматы
выдающие ваши интернет заказы. Обычно все эти автоматы связаны между
собой в сеть и управляются с клиента. Раз в месяц необходимо составлять
отчет о состоянии автоматов. Но проблема в том, что ресурсов на клиенте
недостаточно, чтобы постоянно опрашивать сраазу все автоматы в режиме
реального времени.
Реализуйте паттерн Proxy для данного кода. Заместитель должен хранить в
себе еще одно дополнительное поле с датой получения данных. При вызове
любого из отчетов, должна происходить проверка времени последнего запроса
данных. Если прошло более одного часа, то тогда вызываем метод с отчетом в
реальном объекте. Если меньше, то выводим на экран сохраненные данные с
прошлого отчета. Для времени удобно использовать #include <ctime>
*/


//Autor: Andrey Lyashenko
//IDE: Code::Blocks 20.03
//OS: AltLinux 10

#include "dz_1_1.h"

int main()
    {

    return 0;
    }
